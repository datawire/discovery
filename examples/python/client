#!/usr/bin/env python

# This is the default requests hello world modified to work with
# datawire service discovery. There is a point to using the default
# requests hello world as our example. We want our stuff to be easy to
# work with stuff people already know how to use and are familiar
# with. We aren't telling people how to use web services, they already
# know this. We are showing people how what they already know can fit
# into a microservices architecture.

# The changes to add in discovery are shown below. Currently the API
# is being used in "long form" mode, we can/will streamline/add
# convenience for common scenarios, but first and most important we
# need to get the end-to-end scenario working so we can identify any
# sleeping dragons.

import logging
logging.basicConfig(level=logging.INFO)

import requests

# Start discovery related changes.
from discovery import Discovery, Node
from util import Datawire

disco = Discovery.defaultDiscoball(Datawire.getToken())

node = disco.resolve('hello-flask')
node.await(10.0)

if node.address is None:
    disco.stop()
    raise Exception("timed out")

url = node.address

# End discovery related changes.
r = requests.get(url)

print r.status_code
print r.headers['content-type']
print r.encoding
print r.text
